{"ast":null,"code":"var _jsxFileName = \"/Users/devlogic/Documents/NBASIM_Project_Full/client/src/components/SelectTeam.jsx\";\n//select team, gives user the ability to select NBA teams.\nimport React, { useState, useEffect } from 'react';\nimport { usePlayers } from '../hooks/usePlayers';\nimport { useTeams } from '../hooks/useTeams';\nimport { useGameContext } from '../context/GameContext';\nconst SEASONS = [{\n  label: '2024-25',\n  value: 2025\n}, {\n  label: '2023-24',\n  value: 2024\n}, {\n  label: '2022-23',\n  value: 2023\n}, {\n  label: '2021-22',\n  value: 2022\n}];\nconst QUARTERS = [1, 2, 3, 4];\nexport default function SelectTeam({\n  teamId,\n  setTeamId\n}) {\n  var _SEASONS$find;\n  const [selectedTeam, setSelectedTeam] = useState(teamId || '');\n  const [selectedSeason, setSelectedSeason] = useState(SEASONS[0].value);\n  const [selectedQuarter, setSelectedQuarter] = useState(1);\n  const teams = useTeams();\n  const players = usePlayers(selectedTeam, selectedSeason); // Assumes usePlayers supports season\n  const {\n    setTeamA,\n    setTeamB,\n    setQuarter,\n    setSeason\n  } = useGameContext();\n  useEffect(() => {\n    if (selectedTeam) {\n      if (teamId === 1) {\n        setTeamA(selectedTeam);\n      } else {\n        setTeamB(selectedTeam);\n      }\n    }\n  }, [selectedTeam, teamId, setTeamA, setTeamB]);\n  useEffect(() => {\n    setSeason && setSeason(selectedSeason);\n  }, [selectedSeason, setSeason]);\n  useEffect(() => {\n    setQuarter && setQuarter(selectedQuarter);\n  }, [selectedQuarter, setQuarter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Select Team\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedTeam,\n    onChange: e => setSelectedTeam(e.target.value),\n    className: \"mb-4 p-2 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Select a team\"), teams.map(team => /*#__PURE__*/React.createElement(\"option\", {\n    key: team.id,\n    value: team.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, team.full_name))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Select Season\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedSeason,\n    onChange: e => setSelectedSeason(Number(e.target.value)),\n    className: \"mb-4 p-2 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, SEASONS.map(season => /*#__PURE__*/React.createElement(\"option\", {\n    key: season.value,\n    value: season.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, season.label))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Select Quarter\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedQuarter,\n    onChange: e => setSelectedQuarter(Number(e.target.value)),\n    className: \"mb-4 p-2 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, QUARTERS.map(q => /*#__PURE__*/React.createElement(\"option\", {\n    key: q,\n    value: q,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Quarter \", q))), selectedTeam && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Players (\", (_SEASONS$find = SEASONS.find(s => s.value === selectedSeason)) === null || _SEASONS$find === void 0 ? void 0 : _SEASONS$find.label, \"):\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, players && players.length > 0 ? players.map(player => /*#__PURE__*/React.createElement(\"li\", {\n    key: player.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, player.first_name, \" \", player.last_name)) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"No players found for this team/season.\"))));\n}\n// This component allows the user to select an NBA team from a dropdown list.\n// It fetches the list of teams and players using custom hooks.\n// When a team is selected, it updates the context with the selected team for Team A or Team B.\n// It also displays the players of the selected team.\n// The component uses `useEffect` to update the context whenever the selected team changes.\n// The selected team is stored in the component's state and passed to the context for further use in the game logic.\n// The component is styled with Tailwind CSS classes for a clean and responsive design.\n// The dropdown allows users to select a team, and upon selection, it fetches and displays the players of that team.\n// The component is designed to be reusable and can be integrated into a larger application where team selection is required.\n// The component is flexible enough to be used in different parts of the application where team selection is needed.\n// The component can be easily extended to include more features, such as team logos or additional player statistics.\n\n// The component is designed to be user-friendly, with clear labels and a simple interface for selecting teams and viewing players.","map":{"version":3,"names":["React","useState","useEffect","usePlayers","useTeams","useGameContext","SEASONS","label","value","QUARTERS","SelectTeam","teamId","setTeamId","_SEASONS$find","selectedTeam","setSelectedTeam","selectedSeason","setSelectedSeason","selectedQuarter","setSelectedQuarter","teams","players","setTeamA","setTeamB","setQuarter","setSeason","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","team","key","id","full_name","Number","season","q","find","s","length","player","first_name","last_name"],"sources":["/Users/devlogic/Documents/NBASIM_Project_Full/client/src/components/SelectTeam.jsx"],"sourcesContent":["//select team, gives user the ability to select NBA teams.\nimport React, { useState, useEffect } from 'react';\nimport { usePlayers } from '../hooks/usePlayers';\nimport { useTeams } from '../hooks/useTeams';\nimport { useGameContext } from '../context/GameContext';\n\nconst SEASONS = [\n  { label: '2024-25', value: 2025 },\n  { label: '2023-24', value: 2024 },\n  { label: '2022-23', value: 2023 },\n  { label: '2021-22', value: 2022 },\n];\n\nconst QUARTERS = [1, 2, 3, 4];\n\nexport default function SelectTeam({ teamId, setTeamId }) {\n  const [selectedTeam, setSelectedTeam] = useState(teamId || '');\n  const [selectedSeason, setSelectedSeason] = useState(SEASONS[0].value);\n  const [selectedQuarter, setSelectedQuarter] = useState(1);\n\n  const teams = useTeams();\n  const players = usePlayers(selectedTeam, selectedSeason); // Assumes usePlayers supports season\n  const { setTeamA, setTeamB, setQuarter, setSeason } = useGameContext();\n\n  useEffect(() => {\n    if (selectedTeam) {\n      if (teamId === 1) {\n        setTeamA(selectedTeam);\n      } else {\n        setTeamB(selectedTeam);\n      }\n    }\n  }, [selectedTeam, teamId, setTeamA, setTeamB]);\n\n  useEffect(() => {\n    setSeason && setSeason(selectedSeason);\n  }, [selectedSeason, setSeason]);\n\n  useEffect(() => {\n    setQuarter && setQuarter(selectedQuarter);\n  }, [selectedQuarter, setQuarter]);\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <h2>Select Team</h2>\n      <select\n        value={selectedTeam}\n        onChange={e => setSelectedTeam(e.target.value)}\n        className=\"mb-4 p-2 border rounded\"\n      >\n        <option value=\"\">Select a team</option>\n        {teams.map(team => (\n          <option key={team.id} value={team.id}>\n            {team.full_name}\n          </option>\n        ))}\n      </select>\n\n      <h2>Select Season</h2>\n      <select\n        value={selectedSeason}\n        onChange={e => setSelectedSeason(Number(e.target.value))}\n        className=\"mb-4 p-2 border rounded\"\n      >\n        {SEASONS.map(season => (\n          <option key={season.value} value={season.value}>\n            {season.label}\n          </option>\n        ))}\n      </select>\n\n      <h2>Select Quarter</h2>\n      <select\n        value={selectedQuarter}\n        onChange={e => setSelectedQuarter(Number(e.target.value))}\n        className=\"mb-4 p-2 border rounded\"\n      >\n        {QUARTERS.map(q => (\n          <option key={q} value={q}>\n            Quarter {q}\n          </option>\n        ))}\n      </select>\n\n      {selectedTeam && (\n        <div>\n          <h3>Players ({SEASONS.find(s => s.value === selectedSeason)?.label}):</h3>\n          <ul>\n            {players && players.length > 0 ? (\n              players.map(player => (\n                <li key={player.id}>\n                  {player.first_name} {player.last_name}\n                </li>\n              ))\n            ) : (\n              <li>No players found for this team/season.</li>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n// This component allows the user to select an NBA team from a dropdown list.\n// It fetches the list of teams and players using custom hooks.\n// When a team is selected, it updates the context with the selected team for Team A or Team B.\n// It also displays the players of the selected team.\n// The component uses `useEffect` to update the context whenever the selected team changes.\n// The selected team is stored in the component's state and passed to the context for further use in the game logic.\n// The component is styled with Tailwind CSS classes for a clean and responsive design.\n// The dropdown allows users to select a team, and upon selection, it fetches and displays the players of that team.\n// The component is designed to be reusable and can be integrated into a larger application where team selection is required.\n// The component is flexible enough to be used in different parts of the application where team selection is needed.\n// The component can be easily extended to include more features, such as team logos or additional player statistics.\n\n// The component is designed to be user-friendly, with clear labels and a simple interface for selecting teams and viewing players."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}