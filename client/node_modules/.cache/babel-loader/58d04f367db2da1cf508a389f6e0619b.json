{"ast":null,"code":"var _jsxFileName = \"/Users/devlogic/Documents/NBASIM_Project_Full/client/src/components/GameHistory.jsx\";\nimport React, { useEffect, useState } from 'react';\nexport default function GameHistory() {\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/games').then(res => res.json()).then(setGames);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Game History\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, games.map(game => /*#__PURE__*/React.createElement(\"li\", {\n    key: game._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, game.teamA, \" (\", game.scoreA, \") vs \", game.teamB, \" (\", game.scoreB, \")\"))));\n}\n\n// This component fetches and displays the history of games from the server.\n// It uses the `useEffect` hook to make an API call to retrieve the game data when the component mounts.\n// The game history is displayed as a list of games, showing the teams and their scores.","map":{"version":3,"names":["React","useEffect","useState","GameHistory","games","setGames","fetch","then","res","json","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","game","key","_id","teamA","scoreA","teamB","scoreB"],"sources":["/Users/devlogic/Documents/NBASIM_Project_Full/client/src/components/GameHistory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function GameHistory() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/games')\n      .then(res => res.json())\n      .then(setGames);\n  }, []);\n\n  return (\n    <div>\n      <h2>Game History</h2>\n      <ul>\n        {games.map(game => (\n          <li key={game._id}>{game.teamA} ({game.scoreA}) vs {game.teamB} ({game.scoreB})</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n// This component fetches and displays the history of games from the server.\n// It uses the `useEffect` hook to make an API call to retrieve the game data when the component mounts.\n// The game history is displayed as a list of games, showing the teams and their scores.\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACF,QAAQ,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,KAAA,CAAAU,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEhB,KAAA,CAAAU,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrBhB,KAAA,CAAAU,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGZ,KAAK,CAACa,GAAG,CAACC,IAAI,iBACblB,KAAA,CAAAU,aAAA;IAAIS,GAAG,EAAED,IAAI,CAACE,GAAI;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,IAAI,CAACG,KAAK,EAAC,IAAE,EAACH,IAAI,CAACI,MAAM,EAAC,OAAK,EAACJ,IAAI,CAACK,KAAK,EAAC,IAAE,EAACL,IAAI,CAACM,MAAM,EAAC,GAAK,CACpF,CACC,CACD,CAAC;AAEV;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}