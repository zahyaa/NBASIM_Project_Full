{"ast":null,"code":"import { useEffect } from 'react';\nimport { io } from 'socket.io-client';\nexport default function useSocket(onMessage = () => {}) {\n  useEffect(() => {\n    const socket = io('http://localhost:5000');\n    socket.on('connect', () => {\n      console.log('✅ Socket connected:', socket.id);\n    });\n    socket.on('game:update', onMessage);\n    return () => {\n      socket.disconnect();\n    };\n  }, [onMessage]);\n}\n// This custom hook connects to a WebSocket server using Socket.IO.\n// It listens for messages on the 'game:update' event and calls the provided callback function when a message is received.\n// The socket connection is established when the component mounts and cleaned up when it unmounts.\n\n// The `onMessage` parameter allows the user to define a custom callback function to handle incoming messages.\n\n// The socket connection is established to 'http://localhost:5000', which should match the server's address.\n// The `useEffect` hook ensures that the socket connection is created only once when the component mounts and cleaned up when it unmounts.\n// The `console.log` statement confirms the successful connection to the socket server by logging the socket ID.","map":{"version":3,"names":["useEffect","io","useSocket","onMessage","socket","on","console","log","id","disconnect"],"sources":["/Users/devlogic/Documents/NBASIM_Project_Full/client/src/hooks/useSocket.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nexport default function useSocket(onMessage = () => {}) {\n  useEffect(() => {\n    const socket = io('http://localhost:5000');\n\n    socket.on('connect', () => {\n      console.log('✅ Socket connected:', socket.id);\n    });\n\n    socket.on('game:update', onMessage);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [onMessage]);\n}\n// This custom hook connects to a WebSocket server using Socket.IO.\n// It listens for messages on the 'game:update' event and calls the provided callback function when a message is received.\n// The socket connection is established when the component mounts and cleaned up when it unmounts.\n\n// The `onMessage` parameter allows the user to define a custom callback function to handle incoming messages.\n\n// The socket connection is established to 'http://localhost:5000', which should match the server's address.\n// The `useEffect` hook ensures that the socket connection is created only once when the component mounts and cleaned up when it unmounts.\n// The `console.log` statement confirms the successful connection to the socket server by logging the socket ID."],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,EAAE,QAAQ,kBAAkB;AAErC,eAAe,SAASC,SAASA,CAACC,SAAS,GAAGA,CAAA,KAAM,CAAC,CAAC,EAAE;EACtDH,SAAS,CAAC,MAAM;IACd,MAAMI,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;IAE1CG,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,MAAM,CAACI,EAAE,CAAC;IAC/C,CAAC,CAAC;IAEFJ,MAAM,CAACC,EAAE,CAAC,aAAa,EAAEF,SAAS,CAAC;IAEnC,OAAO,MAAM;MACXC,MAAM,CAACK,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}