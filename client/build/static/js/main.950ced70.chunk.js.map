{"version":3,"sources":["components/TeamDisplay.jsx","components/Controls.jsx","hooks/usePlayers.js","api/api.js","hooks/useTeams.js","context/GameContext.jsx","components/SelectTeam.jsx","components/Quarter.jsx","components/GameHistory.jsx","hooks/useSocket.js","components/Roster.jsx","components/TeamSelector.jsx","components/GameSimulator.jsx","App.jsx","index.js"],"names":["TeamDisplay","_ref","teamName","players","React","createElement","length","map","player","key","id","first_name","last_name","Controls","isRunning","isPaused","onStart","onStop","onPause","onTimeout","onFastForward","className","onClick","disabled","usePlayers","teamId","season","setPlayers","useState","loading","setLoading","error","setError","useEffect","async","res","fetch","concat","ok","Error","json","fetchPlayers","then","catch","finally","useTeams","teams","setTeams","fetchTeams","GameContext","createContext","GameProvider","children","teamA","setTeamA","teamB","setTeamB","setIsRunning","setIsPaused","quarter","setQuarter","setSeason","Provider","value","startGame","pauseGame","p","stopGame","timeout","team","useGameContext","useContext","SEASONS","label","QUARTERS","SelectTeam","_SEASONS$find","setTeamId","selectedTeam","setSelectedTeam","selectedSeason","setSelectedSeason","selectedQuarter","setSelectedQuarter","onChange","e","target","full_name","Number","q","find","s","Quarter","timeLeft","Math","floor","String","padStart","GameHistory","games","setGames","game","_id","scoreA","scoreB","useSocket","url","arguments","undefined","socketRef","useRef","current","io","disconnect","Roster","teamsLoading","teamsError","teamAObj","t","teamBObj","playersA","loadingA","playersB","loadingB","socket","on","data","console","log","off","logo","src","alt","TeamSelector","onSelect","name","GameSimulator","teamAId","setTeamAId","teamBId","setTeamBId","clock","setClock","score","setScore","playLog","setPlayLog","intervalRef","simulatePlay","random","points","prev","_objectSpread","[object Object]","setInterval","clearInterval","handleGameUpdate","canSimulate","Fragment","c","line","idx","style","marginTop","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.950ced70.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function TeamDisplay({ teamName, players }) {\n  return (\n    <div>\n      <h3>{teamName}</h3>\n      <ul>\n        {players && players.length > 0 ? (\n          players.map(player => (\n            <li key={player.id}>\n              {player.first_name} {player.last_name}\n            </li>\n          ))\n        ) : (\n          <li>No players found.</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Controls({\n  isRunning,\n  isPaused,\n  onStart,\n  onStop,\n  onPause,\n  onTimeout,\n  onFastForward\n}) {\n  return (\n    <div className=\"flex flex-wrap gap-4 justify-center\">\n      <button onClick={onStart} disabled={isRunning}>Start</button>\n      <button onClick={onPause} disabled={!isRunning}>{isPaused ? 'Resume' : 'Pause'}</button>\n      <button onClick={onStop}>Stop</button>\n      <button onClick={() => onTimeout('teamA')}>Timeout Team A</button>\n      <button onClick={() => onTimeout('teamB')}>Timeout Team B</button>\n      <button onClick={onFastForward}>Fast Forward</button>\n    </div>\n  );\n}\n\n// This component renders the control buttons for starting, pausing, stopping the game,\n// and managing timeouts for both teams. It also includes a fast forward button.\n// The buttons are disabled based on the current state of the game (running or paused).\n// \n// \n//\n","import { useEffect, useState } from 'react';\nimport { fetchPlayers } from '../api/api';\n\nexport function usePlayers(teamId, season) {\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!teamId || !season) return;\n    setLoading(true);\n    fetchPlayers(teamId, season)\n      .then(setPlayers)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [teamId, season]);\n\n  return { players, loading, error };\n}\n","export async function fetchTeams() {\n  const res = await fetch('/api/teams');\n  if (!res.ok) throw new Error('Failed to fetch teams');\n  return res.json();\n}\n\nexport async function fetchPlayers(teamId, season) {\n  const res = await fetch(`/api/players?teamId=${teamId}&season=${season}`);\n  if (!res.ok) throw new Error('Failed to fetch players');\n  return res.json();\n}","import { useEffect, useState } from 'react';\nimport { fetchTeams } from '../api/api';\n\nexport function useTeams() {\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTeams()\n      .then(setTeams)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return { teams, loading, error };\n}","import React, { createContext, useContext, useState } from 'react';\n\nconst GameContext = createContext();\n\nexport function GameProvider({ children }) {\n  const [teamA, setTeamA] = useState('');\n  const [teamB, setTeamB] = useState('');\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [quarter, setQuarter] = useState(1);\n  const [season, setSeason] = useState(2025);\n\n  const startGame = () => setIsRunning(true);\n  const pauseGame = () => setIsPaused(p => !p);\n  const stopGame = () => setIsRunning(false);\n  const timeout = (team) => {};\n\n  return (\n    <GameContext.Provider value={{\n      teamA, setTeamA,\n      teamB, setTeamB,\n      isRunning, isPaused,\n      startGame, pauseGame, stopGame, timeout,\n      quarter, setQuarter,\n      season, setSeason\n    }}>\n      {children}\n    </GameContext.Provider>\n  );\n}\n\nexport function useGameContext() {\n  return useContext(GameContext);\n}","//select team, gives user the ability to select NBA teams.\nimport React, { useState, useEffect } from 'react';\nimport { usePlayers } from '../hooks/usePlayers';\nimport { useTeams } from '../hooks/useTeams';\nimport { useGameContext } from '../context/GameContext';\n\nconst SEASONS = [\n  { label: '2024-25', value: 2025 },\n  { label: '2023-24', value: 2024 },\n  { label: '2022-23', value: 2023 },\n  { label: '2021-22', value: 2022 },\n];\n\nconst QUARTERS = [1, 2, 3, 4];\n\nexport default function SelectTeam({ teamId, setTeamId }) {\n  const [selectedTeam, setSelectedTeam] = useState(teamId || '');\n  const [selectedSeason, setSelectedSeason] = useState(SEASONS[0].value);\n  const [selectedQuarter, setSelectedQuarter] = useState(1);\n\n  const teams = useTeams();\n  const players = usePlayers(selectedTeam, selectedSeason); // Assumes usePlayers supports season\n  const { setTeamA, setTeamB, setQuarter, setSeason } = useGameContext();\n\n  useEffect(() => {\n    if (selectedTeam) {\n      if (teamId === 1) {\n        setTeamA(selectedTeam);\n      } else {\n        setTeamB(selectedTeam);\n      }\n    }\n  }, [selectedTeam, teamId, setTeamA, setTeamB]);\n\n  useEffect(() => {\n    setSeason && setSeason(selectedSeason);\n  }, [selectedSeason, setSeason]);\n\n  useEffect(() => {\n    setQuarter && setQuarter(selectedQuarter);\n  }, [selectedQuarter, setQuarter]);\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <h2>Select Team</h2>\n      <select\n        value={selectedTeam}\n        onChange={e => setSelectedTeam(e.target.value)}\n        className=\"mb-4 p-2 border rounded\"\n      >\n        <option value=\"\">Select a team</option>\n        {teams.map(team => (\n          <option key={team.id} value={team.id}>\n            {team.full_name}\n          </option>\n        ))}\n      </select>\n\n      <h2>Select Season</h2>\n      <select\n        value={selectedSeason}\n        onChange={e => setSelectedSeason(Number(e.target.value))}\n        className=\"mb-4 p-2 border rounded\"\n      >\n        {SEASONS.map(season => (\n          <option key={season.value} value={season.value}>\n            {season.label}\n          </option>\n        ))}\n      </select>\n\n      <h2>Select Quarter</h2>\n      <select\n        value={selectedQuarter}\n        onChange={e => setSelectedQuarter(Number(e.target.value))}\n        className=\"mb-4 p-2 border rounded\"\n      >\n        {QUARTERS.map(q => (\n          <option key={q} value={q}>\n            Quarter {q}\n          </option>\n        ))}\n      </select>\n\n      {selectedTeam && (\n        <div>\n          <h3>Players ({SEASONS.find(s => s.value === selectedSeason)?.label}):</h3>\n          <ul>\n            {players && players.length > 0 ? (\n              players.map(player => (\n                <li key={player.id}>\n                  {player.first_name} {player.last_name}\n                </li>\n              ))\n            ) : (\n              <li>No players found for this team/season.</li>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n// This component allows the user to select an NBA team from a dropdown list.\n// It fetches the list of teams and players using custom hooks.\n// When a team is selected, it updates the context with the selected team for Team A or Team B.\n// It also displays the players of the selected team.\n// The component uses `useEffect` to update the context whenever the selected team changes.\n// The selected team is stored in the component's state and passed to the context for further use in the game logic.\n// The component is styled with Tailwind CSS classes for a clean and responsive design.\n// The dropdown allows users to select a team, and upon selection, it fetches and displays the players of that team.\n// The component is designed to be reusable and can be integrated into a larger application where team selection is required.\n// The component is flexible enough to be used in different parts of the application where team selection is needed.\n// The component can be easily extended to include more features, such as team logos or additional player statistics.\n\n// The component is designed to be user-friendly, with clear labels and a simple interface for selecting teams and viewing players.","//There is is a total time of 48 minutes in an NBA game, which is 2880 seconds.\n//Write a function that breaks into 4 quarters, each lasting 12 minutes (720 seconds).\n\n//         onStop={() => { setIsRunning(false); setClock(2880); }}\n//         onPause={() => setIsPaused(!isPaused)}\n//         onTimeout={handleTimeout}\n//         onFastForward={fastForwardGame}\n//       </div>\n\n\n\n\nimport React from 'react';\nexport default function Quarter({ quarter, timeLeft }) {\n  return (\n    <div className=\"quarter\">\n      <h3>Quarter {quarter}</h3>\n      <p>Time Left: {Math.floor(timeLeft / 60)}:{String(timeLeft % 60).padStart(2, '0')}</p>\n    </div>\n  );\n}\n// This component displays the current quarter and the time left in that quarter.\n// It takes `quarter` and `timeLeft` as props and formats the time for display.\n// The component is styled with Tailwind CSS classes for a clean and responsive design.\n// It can be used in a game simulation to show the progress of the game in terms of quarters.\n\n","import React, { useEffect, useState } from 'react';\n\nexport default function GameHistory() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/games')\n      .then(res => res.json())\n      .then(setGames);\n  }, []);\n\n  return (\n    <div>\n      <h2>Game History</h2>\n      <ul>\n        {games.map(game => (\n          <li key={game._id}>{game.teamA} ({game.scoreA}) vs {game.teamB} ({game.scoreB})</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n// This component fetches and displays the history of games from the server.\n// It uses the `useEffect` hook to make an API call to retrieve the game data when the component mounts.\n// The game history is displayed as a list of games, showing the teams and their scores.\n\n","import { useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\n\nexport function useSocket(url = 'http://localhost:4000') {\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    if (!socketRef.current) {\n      socketRef.current = io(url);\n    }\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n    };\n  }, [url]);\n\n  return socketRef.current;\n}","//User should be able to select roster from a team, and then select players from that roster.\n//Roster can be from any time period in the NBA\n\nimport React, { useEffect } from 'react'; // Remove useState\nimport { useGameContext } from '../context/GameContext';\nimport { usePlayers } from '../hooks/usePlayers';\nimport { useTeams } from '../hooks/useTeams';\nimport TeamDisplay from './TeamDisplay';\nimport SelectTeam from './SelectTeam';\nimport Controls from './Controls';\nimport GameHistory from './GameHistory';\nimport { useSocket } from '../hooks/useSocket';\n\nconst SEASONS = [\n  { label: '2024-25', value: 2025 },\n  { label: '2023-24', value: 2024 },\n  { label: '2022-23', value: 2023 },\n  { label: '2021-22', value: 2022 },\n];\n\nexport default function Roster() {\n  const { teamA, teamB, setTeamA, setTeamB, isRunning, isPaused, startGame, pauseGame, stopGame, timeout, season, setSeason } = useGameContext();\n  const { teams, loading: teamsLoading, error: teamsError } = useTeams();\n\n  // Find selected team objects for display\n  const teamAObj = teams.find(t => t.id === teamA);\n  const teamBObj = teams.find(t => t.id === teamB);\n\n  // Fetch players for selected teams and season\n  const { players: playersA, loading: loadingA } = usePlayers(teamA, season);\n  const { players: playersB, loading: loadingB } = usePlayers(teamB, season);\n\n  const socket = useSocket();\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('gameUpdate', (data) => {\n      // Handle game updates from the server\n      console.log('Game update received:', data);\n    });\n    return () => {\n      socket.off('gameUpdate');\n    };\n  }, [socket]);\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">NBA Real Team Matchup</h1>\n      <div className=\"mb-4\">\n        <label className=\"mr-2 font-semibold\">Season:</label>\n        <select\n          value={season}\n          onChange={e => setSeason(Number(e.target.value))}\n          className=\"p-2 border rounded\"\n        >\n          {SEASONS.map(s => (\n            <option key={s.value} value={s.value}>{s.label}</option>\n          ))}\n        </select>\n      </div>\n      {teamsLoading && <div>Loading teams...</div>}\n      {teamsError && <div>Error loading teams.</div>}\n      <div className=\"flex flex-col md:flex-row gap-4\">\n        <div className=\"flex-1\">\n          <SelectTeam teamId={teamA} setTeamId={setTeamA} season={season} />\n          {teamAObj && (\n            <div className=\"flex items-center mt-2\">\n              {teamAObj.logo && <img src={teamAObj.logo} alt={teamAObj.full_name} className=\"w-10 h-10 mr-2\" />}\n              <span className=\"font-bold\">{teamAObj.full_name}</span>\n            </div>\n          )}\n          {loadingA ? <div>Loading players...</div> : <TeamDisplay teamName={teamAObj ? teamAObj.full_name : 'Team A'} players={playersA} />}\n        </div>\n        <div className=\"flex-1\">\n          <SelectTeam teamId={teamB} setTeamId={setTeamB} season={season} />\n          {teamBObj && (\n            <div className=\"flex items-center mt-2\">\n              {teamBObj.logo && <img src={teamBObj.logo} alt={teamBObj.full_name} className=\"w-10 h-10 mr-2\" />}\n              <span className=\"font-bold\">{teamBObj.full_name}</span>\n            </div>\n          )}\n          {loadingB ? <div>Loading players...</div> : <TeamDisplay teamName={teamBObj ? teamBObj.full_name : 'Team B'} players={playersB} />}\n        </div>\n      </div>\n      <div className=\"mt-6\">\n        <Controls\n          isRunning={isRunning}\n          isPaused={isPaused}\n          onStart={startGame}\n          onStop={stopGame}\n          onPause={pauseGame}\n          onTimeout={timeout}\n        />\n      </div>\n      <div className=\"mt-6\">\n        <GameHistory />\n      </div>\n    </div>\n  );\n}\n// This component allows users to select NBA teams and view their rosters.\n// It uses custom hooks to fetch teams and players, and displays the selected teams with their players.\n// The component also includes controls for starting, pausing, and stopping the game,\n// as well as managing timeouts for each team.\n// The game history is displayed at the bottom, showing past games and their results.\n// The component is designed to be responsive and user-friendly, making it easy for users to interact with the NBA roster selection process.\n// The component integrates with a WebSocket to receive real-time game updates,\n\n// allowing for dynamic updates to the game state without needing to refresh the page.\n// This enhances the user experience by providing immediate feedback on game actions and events.\n// The use of Tailwind CSS classes ensures a clean and modern design, making the component visually appealing.\n\n","import React from 'react';\n\nexport default function TeamSelector({ onSelect }) {\n  const teams = [\n    { id: 1, name: 'Lakers' },\n    { id: 2, name: 'Warriors' },\n    { id: 3, name: 'Celtics' }\n  ];\n\n  return (\n    <select onChange={e => onSelect(e.target.value)}>\n      {teams.map(team => (\n        <option key={team.id} value={team.id}>{team.name}</option>\n      ))}\n    </select>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport TeamDisplay from './TeamDisplay';\nimport Controls from './Controls';\nimport SelectTeam from './SelectTeam';\nimport { usePlayers } from '../hooks/usePlayers';\nimport Quarter from './Quarter';\nimport GameHistory from './GameHistory';\nimport Roster from './Roster';\nimport TeamSelector from './TeamSelector';\nimport { useSocket } from '../hooks/useSocket';\n\nexport default function GameSimulator() {\n  // State for team selection and season\n  const [teamAId, setTeamAId] = useState('');\n  const [teamBId, setTeamBId] = useState('');\n  const [season, setSeason] = useState(2025);\n\n  const playersA = usePlayers(teamAId, season);\n  const playersB = usePlayers(teamBId, season);\n\n  const [clock, setClock] = useState(720); // 12 min\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [score, setScore] = useState({ teamA: 0, teamB: 0 });\n  const [playLog, setPlayLog] = useState([]);\n  const intervalRef = useRef(null);\n  const socket = useSocket();\n\n  function simulatePlay() {\n    const chance = Math.random();\n    if (chance < 0.05) {\n      const team = Math.random() < 0.5 ? 'teamA' : 'teamB';\n      const points = Math.random() < 0.7 ? 2 : 3;\n      setScore(prev => ({ ...prev, [team]: prev[team] + points }));\n      setPlayLog(prev => [...prev, `${team} scored ${points} points`]);\n    }\n  }\n\n  function fastForwardGame() {\n    clearInterval(intervalRef.current);\n    while (clock > 0) {\n      simulatePlay();\n      setClock(c => c - 1);\n    }\n    setIsRunning(false);\n  }\n\n  useEffect(() => {\n    if (isRunning && clock > 0) {\n      intervalRef.current = setInterval(() => {\n        setClock(prev => prev - 1);\n        simulatePlay();\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, clock]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleGameUpdate = (data) => {\n      // Example: handle incoming game updates\n      console.log('Game update received:', data);\n      // You can update state here if needed\n    };\n\n    socket.on('gameUpdate', handleGameUpdate);\n\n    return () => {\n      socket.off('gameUpdate', handleGameUpdate);\n    };\n  }, [socket]);\n\n  // Only allow simulation if both teams are selected\n  const canSimulate = teamAId && teamBId;\n\n  return (\n    <div>\n      <h1>NBA Simulation</h1>\n      <div className=\"flex gap-8 mb-4\">\n        <div>\n          <SelectTeam teamId={teamAId} setTeamId={setTeamAId} setSeason={setSeason} />\n        </div>\n        <div>\n          <SelectTeam teamId={teamBId} setTeamId={setTeamBId} setSeason={setSeason} />\n        </div>\n      </div>\n      {canSimulate && (\n        <>\n          {/* Render Quarter component */}\n          <Quarter quarter={1} timeLeft={clock} />\n\n          <div>Clock: {Math.floor(clock / 60)}:{String(clock % 60).padStart(2, '0')}</div>\n          <div>Score: Team A {score.teamA} - Team B {score.teamB}</div>\n          <TeamDisplay teamName=\"Team A\" players={playersA} />\n          <TeamDisplay teamName=\"Team B\" players={playersB} />\n          <Controls\n            isRunning={isRunning}\n            isPaused={isPaused}\n            onStart={() => setIsRunning(true)}\n            onStop={() => { setIsRunning(false); setClock(2880); }}\n            onPause={() => setIsPaused(p => !p)}\n            onFastForward={fastForwardGame}\n          />\n          <div>\n            <h2>Play-by-Play</h2>\n            <ul>{playLog.map((line, idx) => <li key={idx}>{line}</li>)}</ul>\n          </div>\n        </>\n      )}\n      {!canSimulate && <div>Please select both teams and season to start simulation.</div>}\n\n      {/* Render unused components for demonstration */}\n      <div style={{ marginTop: 40 }}>\n        <h2>Other Components Demo</h2>\n        <Quarter quarter={1} timeLeft={clock} />\n        <GameHistory />\n        <TeamSelector />\n        <Roster />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport GameSimulator from './components/GameSimulator';\nimport { GameProvider } from './context/GameContext';\n\nexport default function App() {\n  return (\n    <GameProvider>\n      <GameSimulator />\n    </GameProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}